[project]
name = "api"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "alembic>=1.16.1",
    "annotated-types==0.7.0",
    "anyio==4.9.0",
    "click==8.2.1",
    "fastapi==0.115.12",
    "h11==0.16.0",
    "idna==3.10",
    "passlib[bcrypt]>=1.7.4",
    "psycopg2-binary==2.9.10",
    "pydantic[email]==2.11.5",
    "pydantic-core==2.33.2",
    "pydantic-settings>=2.9.1",
    "pyexecjs==1.5.1",
    "python-dotenv==1.1.0",
    "python-jose[cryptography]>=3.5.0",
    "python-json-logger==2.0.7",
    "sniffio==1.3.1",
    "sqlalchemy==2.0.41",
    "starlette==0.46.2",
    "typing-extensions==4.13.2",
    "typing-inspection==0.4.1",
    "uvicorn==0.34.2",
    "httpx>=0.28.1",
]

[dependency-groups]
dev = [
    "ruff>=0.11.13",
]

[tool.ruff]
# Base configurations
line-length = 120
indent-width = 4
target-version = "py310"
lint.select = [
  "E",   # Pycodestyle errors
  "W",   # Pycodestyle warnings
  "F",   # PyFlakes
  "I",   # Isort
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "EM",  # flake8-errmsg
  "RET", # flake8-return
  "SIM", # flake8-simplify
  "TID", # flake8-tidy-imports
  "UP",  # pyupgrade
  "YTT", # flake8-2020
  "ANN", # flake8-annotations
  "S",   # flake8-bandit (security)
  "PGH", # pygrep-hooks
]
lint.ignore = [
  "D",      # Disable pydocstyle (we'll use ruff's docstring rules separately)
]

exclude = [
    "versions",
]

[lint.per-file-ignores]
"env.py" = ["F401"] 

[lint]
fixable = ["ALL"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
